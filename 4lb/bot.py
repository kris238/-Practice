import telebot
from telebot.types import ReplyKeyboardMarkup
import random

bot = telebot.TeleBot('YOUR_API_TOKEN')

@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –≤—ã–ø–µ—á–∫–∏. –í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é –Ω–∏–∂–µ:",
        reply_markup=create_keyboard()
    )

recipes = {
    "üçé –Ø–±–ª–æ—á–Ω—ã–π –ø–∏—Ä–æ–≥": "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: 2 —Å—Ç–∞–∫–∞–Ω–∞ –º—É–∫–∏, 200 –≥ –º–∞—Å–ª–∞, 1 —Å—Ç–∞–∫–∞–Ω —Å–∞—Ö–∞—Ä–∞, 4 —è–±–ª–æ–∫–∞...",
    "üç´ –®–æ–∫–æ–ª–∞–¥–Ω—ã–π –∫–µ–∫—Å": "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: 1.5 —Å—Ç–∞–∫–∞–Ω–∞ –º—É–∫–∏, 1 —Å—Ç–∞–∫–∞–Ω —Å–∞—Ö–∞—Ä–∞, 100 –≥ –∫–∞–∫–∞–æ...",
    "üç™ –û–≤—Å—è–Ω–æ–µ –ø–µ—á–µ–Ω—å–µ": "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: 1 —Å—Ç–∞–∫–∞–Ω –æ–≤—Å—è–Ω–∫–∏, 0.5 —Å—Ç–∞–∫–∞–Ω–∞ –º—É–∫–∏, 100 –≥ –º–∞—Å–ª–∞...",
    "üçå –ë–∞–Ω–∞–Ω–æ–≤—ã–π —Ö–ª–µ–±": "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: 3 —Å–ø–µ–ª—ã—Ö –±–∞–Ω–∞–Ω–∞, 2 —Å—Ç–∞–∫–∞–Ω–∞ –º—É–∫–∏, 1 —Å—Ç–∞–∫–∞–Ω —Å–∞—Ö–∞—Ä–∞...",
    "üßÄ –°—ã—Ä–Ω–∏–∫–∏": "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: 500 –≥ —Ç–≤–æ—Ä–æ–≥–∞, 2 —è–π—Ü–∞, 3 —Å—Ç.–ª. —Å–∞—Ö–∞—Ä–∞...",
    "ü•û –ë–ª–∏–Ω—ã": "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: 2 —Å—Ç–∞–∫–∞–Ω–∞ –º–æ–ª–æ–∫–∞, 2 —è–π—Ü–∞, 1.5 —Å—Ç–∞–∫–∞–Ω–∞ –º—É–∫–∏...",
    "ü•¨ –ü–∏—Ä–æ–∂–∫–∏ —Å –∫–∞–ø—É—Å—Ç–æ–π": "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: 500 –≥ —Ç–µ—Å—Ç–∞, 300 –≥ —Ç—É—à–µ–Ω–æ–π –∫–∞–ø—É—Å—Ç—ã...",
    "üç∞ –ß–∏–∑–∫–µ–π–∫": "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: 200 –≥ –ø–µ—á–µ–Ω—å—è, 100 –≥ –º–∞—Å–ª–∞, 500 –≥ —Ç–≤–æ—Ä–æ–∂–Ω–æ–≥–æ —Å—ã—Ä–∞..."
}

def create_keyboard():
    keyboard = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    buttons = list(recipes.keys()) + ["–°–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç", "–ü–æ–∏—Å–∫ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º", "–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç", "–°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–ø–µ—á–∫–µ", "–°–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤", "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ü–µ–ø—Ç–æ–º"]
    keyboard.add(*buttons)
    return keyboard

@bot.message_handler(func=lambda message: message.text in recipes)
def send_recipe(message):
    recipe = message.text
    bot.send_message(message.chat.id, recipes[recipe])

@bot.message_handler(func=lambda message: message.text == "–°–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç")
def random_recipe(message):
    recipe = random.choice(list(recipes.keys()))
    bot.send_message(message.chat.id, f"–í–∞—à —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç: {recipe}\n{recipes[recipe]}")

@bot.message_handler(func=lambda message: message.text == "–ü–æ–∏—Å–∫ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º")
def search_by_ingredient(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç:")
    bot.register_next_step_handler(message, find_by_ingredient)

def find_by_ingredient(message):
    ingredient = message.text.lower()
    found_recipes = [name for name, recipe in recipes.items() if ingredient in recipe.lower()]

    if found_recipes:
        response = "\n".join(found_recipes)
        bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç—ã —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º '{ingredient}':\n{response}")
    else:
        bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç—ã —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º '{ingredient}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

@bot.message_handler(func=lambda message: message.text == "–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç")
def add_recipe(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞:")
    bot.register_next_step_handler(message, process_recipe_name)

def process_recipe_name(message):
    recipe_name = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:")
    bot.register_next_step_handler(message, process_recipe_ingredients, recipe_name)

def process_recipe_ingredients(message, recipe_name):
    ingredients = message.text
    recipes[recipe_name] = f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {ingredients}"
    bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç '{recipe_name}' –¥–æ–±–∞–≤–ª–µ–Ω!")

@bot.message_handler(func=lambda message: message.text == "–°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–ø–µ—á–∫–µ")
def baking_tips(message):
    tips = "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã.\n2. –•–æ—Ä–æ—à–æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–π—Ç–µ —Ç–µ—Å—Ç–æ.\n3. –ù–µ –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –¥—É—Ö–æ–≤–∫—É —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ.\n4. –î–∞–π—Ç–µ —Ç–µ—Å—Ç—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å."
    bot.send_message(message.chat.id, tips)

@bot.message_handler(func=lambda message: message.text == "–°–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤")
def list_recipes(message):
    response = "\n".join(recipes.keys())
    bot.send_message(message.chat.id, f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:\n{response}")

@bot.message_handler(func=lambda message: message.text == "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ü–µ–ø—Ç–æ–º")
def share_recipe(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:")
    bot.register_next_step_handler(message, process_share_recipe)


def process_share_recipe(message):
    recipe_name = message.text
    if recipe_name in recipes:
        bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç '{recipe_name}':\n{recipes[recipe_name]}")
    else:
        bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç '{recipe_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")


if __name__ == '__main__':
    bot.polling(none_stop=True)
